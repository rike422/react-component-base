#!/usr/bin/env node

const process = require('process');
const nunjucks = require('nunjucks');
const program = require('commander');
const changCase = require('change-case');
const fs = require('fs');
const path = require('path');
const TEMPLATE_PATH = path.join(__dirname, '../', 'templates');
const mkdirp = require('mkdirp')

function mkdir(outputPath, cb) {
  mkdirp(path.join(__dirname, '../', path.dirname(outputPath)));
}
function writeFile(path, content) {
  fs.writeFile(path, content);
  console.log(`write ${path}`);
}

program.version('0.0.1');
program
  .command('generate <name>')
  .description('Generate new react component')
  .action((name, args) => {
    const context = {
      className: changCase.pascalCase(name),
      directoryName: changCase.paramCase(name)
    };
    const GENERATE_FILES = [
      {
        from: path.join('src', 'component', 'component.jsx.njk'),
        to: path.join('src', 'components', context.directoryName, `${context.directoryName}.jsx`)
      },
      {
        from: path.join('src', 'component', 'README.md.njk'),
        to: path.join('src', 'components', context.directoryName, 'README.md')
      },
      {
        from: path.join('src', 'component', 'style.scss.njk'),
        to: path.join('src', 'components', context.directoryName, 'style.scss')
      },
      {
        from: path.join('src', 'stories', 'story.js.njk'),
        to: path.join('src', 'stories', `${context.directoryName}.jsx`)
      },
      {
        from: path.join('tests', 'test.js.njk'),
        to: path.join('test', 'components', context.directoryName, `${context.directoryName}_spec.jsx`)
      }
    ];
    GENERATE_FILES.forEach((template) => {
      nunjucks.render(path.join(TEMPLATE_PATH, template.from), context, (err, content) => {
        if (err != null) {
          console.error(err);
          process.exit(1)
        }
        mkdir(template.to);
        writeFile(template.to, content);
      });
    })
  });

program.parse(process.argv);
